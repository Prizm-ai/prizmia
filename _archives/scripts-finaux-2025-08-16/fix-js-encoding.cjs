// fix-js-encoding.cjs
// Corrige l'encodage cass√© dans TOUS les fichiers JavaScript du syst√®me
const fs = require('fs').promises;
const path = require('path');

async function fixJSEncoding() {
  console.log('\nüîß CORRECTION DE L\'ENCODAGE DES FICHIERS JAVASCRIPT');
  console.log('='.repeat(60) + '\n');
  
  const BASE_DIR = 'C:\\Users\\Samuel\\Documents\\prizmia\\pipelines\\content-generation';
  
  // Fichiers critiques √† corriger
  const filesToFix = [
    'config/prizm-config.cjs',
    'agent-redacteur-factuel.cjs',
    'agent-veille-v5.cjs',
    'agent-style-conversationnel.cjs',
    'pipeline-v5-batch.cjs'
  ];
  
  // Dictionnaire de corrections
  const corrections = {
    // Caract√®res fran√ßais de base
    '√É¬©': '√©', '√É¬®': '√®', '√É ': '√†', '√É¬¢': '√¢', '√É¬™': '√™',
    '√É¬¥': '√¥', '√É¬π': '√π', '√É¬ª': '√ª', '√É¬ß': '√ß', '√É¬Æ': '√Æ',
    '√É¬Ø': '√Ø', '√É‚Ä∞': '√â', '√ÉÀÜ': '√à', '√É‚Ç¨': '√Ä', '√É‚Ä°': '√á',
    '√É≈†': '√ä', '√É"': '√î', '√É‚Äö': '√Ç',
    // Cas sp√©ciaux
    'g√É¬©n√É¬©rale': 'g√©n√©rale',
    'O√É¬π': 'O√π',
    'o√É¬π': 'o√π',
    'cr√É¬©er': 'cr√©er',
    'cr√É¬©√É¬©': 'cr√©√©',
    'g√É¬©n√É¬©rer': 'g√©n√©rer',
    'r√É¬©dacteur': 'r√©dacteur',
    'pr√É¬™ts': 'pr√™ts',
    'v√É¬©rifi√É¬©es': 'v√©rifi√©es',
    'sauvegard√É¬©': 'sauvegard√©',
    'termin√É¬©': 'termin√©',
    'r√É¬©ussis': 'r√©ussis',
    '√É¬©checs': '√©checs',
    'dur√É¬©e': 'dur√©e',
    '√É¬©quipe': '√©quipe',
    'cat√É¬©gorie': 'cat√©gorie',
    'qualit√É¬©': 'qualit√©',
    // Symboles de console (on les laisse, ils seront corrig√©s plus tard)
  };
  
  let totalFixed = 0;
  
  for (const file of filesToFix) {
    const filepath = path.join(BASE_DIR, file);
    
    try {
      console.log(`\nüìÑ Traitement de ${file}...`);
      
      // Lire le fichier
      let content = await fs.readFile(filepath, 'utf8');
      const originalContent = content;
      let fixCount = 0;
      
      // Appliquer toutes les corrections
      for (const [bad, good] of Object.entries(corrections)) {
        const regex = new RegExp(bad.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
        const matches = content.match(regex);
        if (matches) {
          content = content.replace(regex, good);
          fixCount += matches.length;
        }
      }
      
      // Si des modifications ont √©t√© faites
      if (content !== originalContent) {
        // Cr√©er une sauvegarde
        const backupPath = filepath + '.backup-' + Date.now();
        await fs.writeFile(backupPath, originalContent, 'utf8');
        console.log(`   üíæ Sauvegarde : ${path.basename(backupPath)}`);
        
        // √âcrire le fichier corrig√©
        await fs.writeFile(filepath, content, 'utf8');
        console.log(`   ‚úÖ ${fixCount} corrections appliqu√©es`);
        totalFixed += fixCount;
        
        // Afficher quelques exemples de ce qui a √©t√© corrig√©
        const examples = [];
        for (const [bad, good] of Object.entries(corrections)) {
          if (originalContent.includes(bad)) {
            examples.push(`${bad} ‚Üí ${good}`);
            if (examples.length >= 3) break;
          }
        }
        if (examples.length > 0) {
          console.log(`   üìù Exemples : ${examples.join(', ')}`);
        }
      } else {
        console.log(`   ‚è≠Ô∏è  Pas de caract√®res mal encod√©s trouv√©s`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå Erreur : ${error.message}`);
    }
  }
  
  console.log('\n' + '='.repeat(60));
  console.log(`\nüìä TOTAL : ${totalFixed} corrections appliqu√©es`);
  
  if (totalFixed > 0) {
    console.log('\n‚úÖ Les fichiers JavaScript sont maintenant correctement encod√©s !');
    console.log('\nüß™ √âTAPE SUIVANTE : Test de g√©n√©ration');
    console.log('1. G√©n√©rer un article de test :');
    console.log('   node pipeline-v5-batch.cjs --single --titre "Test encodage UTF-8 corrig√©"');
    console.log('\n2. V√©rifier l\'article g√©n√©r√© :');
    console.log('   type output\\articles-batch-v5-ready\\*.md | Select-Object -First 20');
    console.log('\n3. Si OK, g√©n√©rer les 5 articles restants');
  } else {
    console.log('\n‚úÖ Tous les fichiers sont d√©j√† correctement encod√©s.');
  }
}

// Lancer
fixJSEncoding().catch(console.error);